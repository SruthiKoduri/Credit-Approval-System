from datetime import datetime
from .models import Loan

def calculate_credit_score(customer):
    loans = Loan.objects.filter(customer=customer)
    if not loans.exists():
        return 100
    score = 0
    total_emis = sum(loan.tenure for loan in loans)
    paid_on_time = sum(loan.emis_paid_on_time for loan in loans)
    if total_emis > 0:
        score += (paid_on_time / total_emis) * 40
    num_loans = loans.count()
    if num_loans <= 3:
        score += 20
    elif num_loans <= 5:
        score += 15
    else:
        score += 10
    current_year = datetime.now().year
    current_year_loans = loans.filter(start_date__year=current_year)
    if current_year_loans.count() <= 2:
        score += 20
    total_loan_amount = sum(loan.loan_amount for loan in loans)
    if total_loan_amount <= customer.approved_limit:
        score += 20
    return min(int(score), 100)

def calculate_monthly_emi(principal, annual_rate, tenure_months):
    if annual_rate == 0:
        return principal / tenure_months
    monthly_rate = annual_rate / (12 * 100)
    emi = principal * monthly_rate * ((1 + monthly_rate) ** tenure_months) / (((1 + monthly_rate) ** tenure_months) - 1)
    return round(emi, 2)

def get_corrected_interest_rate(credit_score, requested_rate):
    if credit_score > 50:
        return requested_rate
    elif credit_score > 30:
        return max(requested_rate, 12.0)
    elif credit_score > 10:
        return max(requested_rate, 16.0)
    return requested_rate
